{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","place","setplace","text","settext","finalData","setData","useEffect","fetch","then","res","json","data","console","log","Weather","className","src","current","condition","icon","location","name","temp_c","div","humidity","precip_in","type","onChange","e","target","value","Button","variant","onClick","style","width","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOA8EeA,MAxEf,WAAgB,IAAD,EACb,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAiBC,EAAjB,KACAC,qBAAU,WACRC,MAAM,oFAAD,OAAqFP,IACvFQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJC,QAAQC,IAAIb,GACZY,QAAQC,IAAIF,GACZN,EAAQM,QAEZ,CAACX,IAEH,IAAMc,EAAU,WAEhB,OACE,sBAAKC,UAAU,UAAf,UACE,qBAAKC,IAAKZ,EAAUa,QAAQC,UAAUC,OACtC,6BAAKf,EAAUgB,SAASC,OAExB,qBAAIN,UAAU,OAAd,UAAsBX,EAAUa,QAAQK,OAAxC,WACA,4BAAIlB,EAAUa,QAAQC,UAAUhB,OAEhC,qBAAKa,UAAU,gBAAf,SACE,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,QAAf,kBACA,sBAAKA,UAAU,OAAf,gBAAyB,sBAAMA,UAAU,OAAhB,kBAAzB,UAEF,sBAAKQ,KAAG,EAACR,UAAY,MAArB,UACE,qBAAKA,UAAU,QAAf,sBACA,sBAAKA,UAAU,OAAf,UAAwBX,EAAUa,QAAQO,SAA1C,UAEF,sBAAKT,UAAU,MAAf,UACE,qBAAKA,UAAU,QAAf,2BACA,qBAAKA,UAAU,OAAf,SAAuBX,EAAUa,QAAQQ,wBAYnD,OACE,qBAAKV,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,OAAf,SACE,sBAAKA,UAAU,MAAf,UACE,uBAAOW,KAAK,OAAOC,SAAU,SAACC,GAAD,OAAKzB,EAAQyB,EAAEC,OAAOC,UACnD,cAACC,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAAS,kBAAIhC,EAASC,IAAhD,2BAIN,sBAAKa,UAAU,MAAf,UACE,qBAAKA,UAAU,aACf,qBAAKA,UAAU,WAAf,SACE,qBAAKA,UAAU,OAAOmB,MAAO,CAACC,MAAM,SAApC,UACa,OAAT/B,QAAS,IAATA,GAAA,UAAAA,EAAWgB,gBAAX,eAAqBC,MAAK,cAACP,EAAD,IAAW,6DCzDtCsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB9B,MAAK,YAAkD,IAA/C+B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c8ccabfb.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { Button,Card,Container,Col,Row } from 'react-bootstrap';\n\n\nfunction App() {\n  const [place, setplace] = useState(\"\")\n  const [text, settext] = useState(\"\")\n  const [finalData,setData]=useState(\"\")\n  useEffect(() => {\n    fetch(`https://api.weatherapi.com/v1/forecast.json?key=2c354446c88048109fd54113210108&q=${place}`)\n      .then(res => res.json())\n      .then(data => {\n        console.log(place)\n        console.log(data)\n        setData(data)\n      })\n  },[place])\n\n  const Weather = () => {\n    {}\n  return(\n    <div className=\"weather\">\n      <img src={finalData.current.condition.icon} />\n      <h6>{finalData.location.name}</h6>\n      {/* <p>{finalData.current.condition.text}</p> */}\n      <h1 className=\"temp\">{finalData.current.temp_c} Â°</h1>\n      <p>{finalData.current.condition.text}</p>\n\n      <div className=\"container uhp\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <div className=\"title\">Wind</div>\n            <div className=\"data\">12 <span className=\"unit\">km/h</span> </div>\n          </div>\n          <div div className = \"col\" > \n            <div className=\"title\">Humidity</div>\n            <div className=\"data\">{ finalData.current.humidity}%</div>\n          </div>\n          <div className=\"col\">\n            <div className=\"title\">Precipitation</div>\n            <div className=\"data\">{finalData.current.precip_in }</div>\n          </div>\n        </div>\n      </div>\n      \n      \n\n    </div>\n  )\n}\n\n\n  return (\n    <div className=\"app\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"form\">\n            <div className=\"col\">\n              <input type=\"text\" onChange={(e)=>settext(e.target.value)}/>\n              <Button variant=\"primary\" onClick={()=>setplace(text)}>Submit</Button>\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-4\"></div>\n          <div className=\"col-md-4\">\n            <div className=\"card\" style={{width:\"300px\" }}>\n              { finalData?.location?.name?<Weather/>:<h2>Page not found</h2>}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}